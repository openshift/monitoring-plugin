apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "openshift-console-plugin.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openshift-console-plugin.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.plugin.replicas }}
  selector:
    matchLabels:
      {{- include "openshift-console-plugin.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
            {{- include "openshift-console-plugin.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "openshift-console-plugin.serviceAccountName" . }}
      containers:
        - name: {{ template "openshift-console-plugin.name" . }}
          image: {{ required "Plugin image must be specified!" .Values.plugin.image }}
          ports:
            - containerPort: {{ .Values.plugin.port }}
              protocol: TCP
          imagePullPolicy: Always
          {{- if and (.Values.plugin.securityContext.enabled) (.Values.plugin.containerSecurityContext) }}
          securityContext: {{ tpl (toYaml (omit .Values.plugin.containerSecurityContext "enabled")) $ | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.plugin.resources | nindent 12 }}
          volumeMounts:
            - name: {{ template "openshift-console-plugin.certificateSecret" . }}
              readOnly: true
              mountPath: /var/cert
          args:
            - '-config-path=/opt/app-root/web/dist'
            - '-static-path=/opt/app-root/web/dist'
            - '-cert=/var/cert/tls.crt'
            - '-key=/var/cert/tls.key'
            - '-log-level=info'
            {{- if and (.Values.plugin.acm.enabled) }}
            - '-features=acm-alerting'
            - '-alertmanager={{ .Values.plugin.acm.alertmanager.url }}'
            - '-thanos-querier={{ .Values.plugin.acm.thanos.url }}'
            {{- end }}
      volumes:
        - name: {{ template "openshift-console-plugin.certificateSecret" . }}
          secret:
            secretName: {{ template "openshift-console-plugin.certificateSecret" . }}
            defaultMode: 420
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      {{- if and (.Values.plugin.securityContext.enabled) (.Values.plugin.podSecurityContext) }}
      securityContext: {{ tpl (toYaml (omit .Values.plugin.podSecurityContext "enabled")) $ | nindent 8 }}
      {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
